name: Test, build and deploy madraas

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - '.lsp/**'

permissions:
  id-token: write
  contents: read

concurrency: ci

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.sha.outputs.sha }}
    steps:
      - uses: actions/checkout@v3
      - name: Get deployment sha
        id: sha
        run: echo "sha=$(cut -c 1-10 <<< ${{ github.sha }})" >> $GITHUB_OUTPUT

  notify-start:
    needs:
      - configure
    runs-on: ubuntu-latest
    outputs:
      slack-message: ${{ steps.slack.outputs.message-id }}
    steps:
      - name: Notify build start
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          text: ":hourglass_flowing_sand: Fram med planlaseren …"
          short-text: "Bygget til Madraas er satt i gang …"

#  lint:
#    runs-on: ubuntu-latest

  test:
    runs-on: ubuntu-latest

    needs:
      - configure
      - notify-start

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@13.2
        with:
          cli: 1.12.0.1488
      - name: Cache maven build deps
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-clojure-test-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-clojure-test
      - name: Cache gitlibs
        uses: actions/cache@v3
        with:
          path: ~/.gitlibs
          key: ${{ runner.os }}-gitlibs-test-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-gitlibs-test
      - name: Notify testing
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.notify-start.outputs.slack-message }}
          text: ":safety_vest: Kjører tester …"
      - name: Test
        run: make test

  notify-success:
    runs-on: ubuntu-latest

    needs:
      - configure
      - notify-start
      - test

    if: success()

    steps:
      - name: Notify build & push success
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.notify-start.outputs.slack-message }}
          text: ":world_map: Landet er målt"

  notify-failure:
    runs-on: ubuntu-latest

    needs:
      - configure
      - notify-start
      - test

    if: failure()

    steps:
      - name: Notify failure
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.notify-start.outputs.slack-message }}
          text: ":rotating_light: Kartografen har gått seg vill!"
